/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Categoria;

import Libro.LibroView;
import Usuario.Usuario;
import Usuario.UsuarioController;
import Usuario.UsuarioDAO;
import bibliotecaapp.DatabaseConnection;
import java.sql.Connection;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ALY
 */
public class CategoriaView extends javax.swing.JFrame {
    
    public static void mostrarMensaje(String categor√≠a_creada_exitosamente) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    public static void mostrarCategorias(List<Categoria> categorias) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
    /**
     * Creates new form CategoriaView
     */
    public CategoriaView() {
        initComponents();
         ListarCategoria();
        R1.setEnabled(false);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        E1 = new javax.swing.JPanel();
        TITULO = new javax.swing.JLabel();
        E2 = new javax.swing.JPanel();
        P1 = new javax.swing.JLabel();
        P2 = new javax.swing.JLabel();
        R1 = new javax.swing.JTextField();
        B1 = new javax.swing.JButton();
        B2 = new javax.swing.JButton();
        B3 = new javax.swing.JButton();
        B4 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        B5 = new javax.swing.JButton();
        R2 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        E1.setBackground(new java.awt.Color(153, 153, 255));
        E1.setToolTipText("");

        TITULO.setBackground(new java.awt.Color(153, 153, 255));
        TITULO.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        TITULO.setForeground(new java.awt.Color(0, 0, 0));
        TITULO.setText("Categoria");

        javax.swing.GroupLayout E1Layout = new javax.swing.GroupLayout(E1);
        E1.setLayout(E1Layout);
        E1Layout.setHorizontalGroup(
            E1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(E1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(TITULO, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        E1Layout.setVerticalGroup(
            E1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(E1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(TITULO)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        E2.setBackground(new java.awt.Color(204, 204, 255));
        E2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Datos De Categoria", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 14), new java.awt.Color(0, 0, 0))); // NOI18N
        E2.setForeground(new java.awt.Color(0, 0, 0));

        P1.setBackground(new java.awt.Color(204, 204, 255));
        P1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        P1.setForeground(new java.awt.Color(0, 0, 0));
        P1.setText("Id:");

        P2.setBackground(new java.awt.Color(204, 204, 255));
        P2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        P2.setForeground(new java.awt.Color(0, 0, 0));
        P2.setText("Nombre:");

        R1.setBackground(new java.awt.Color(204, 204, 255));
        R1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        R1.setForeground(new java.awt.Color(0, 0, 0));
        R1.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(153, 153, 255)));

        B1.setBackground(new java.awt.Color(153, 153, 255));
        B1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        B1.setForeground(new java.awt.Color(0, 0, 0));
        B1.setText("Crear");
        B1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B1ActionPerformed(evt);
            }
        });

        B2.setBackground(new java.awt.Color(153, 153, 255));
        B2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        B2.setForeground(new java.awt.Color(0, 0, 0));
        B2.setText("Seleccionar");
        B2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B2ActionPerformed(evt);
            }
        });

        B3.setBackground(new java.awt.Color(153, 153, 255));
        B3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        B3.setForeground(new java.awt.Color(0, 0, 0));
        B3.setText("Actualizar");
        B3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B3ActionPerformed(evt);
            }
        });

        B4.setBackground(new java.awt.Color(153, 153, 255));
        B4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        B4.setForeground(new java.awt.Color(0, 0, 0));
        B4.setText("Eliminar");
        B4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B4ActionPerformed(evt);
            }
        });

        jTable1.setBackground(new java.awt.Color(153, 153, 255));
        jTable1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jTable1.setForeground(new java.awt.Color(0, 0, 0));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Id", "Nombre"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        B5.setBackground(new java.awt.Color(153, 153, 255));
        B5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        B5.setForeground(new java.awt.Color(0, 0, 0));
        B5.setText("Volver");
        B5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B5ActionPerformed(evt);
            }
        });

        R2.setBackground(new java.awt.Color(204, 204, 255));
        R2.setForeground(new java.awt.Color(0, 0, 0));
        R2.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(153, 153, 255)));

        javax.swing.GroupLayout E2Layout = new javax.swing.GroupLayout(E2);
        E2.setLayout(E2Layout);
        E2Layout.setHorizontalGroup(
            E2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(E2Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                .addComponent(B5, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
            .addGroup(E2Layout.createSequentialGroup()
                .addGroup(E2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(E2Layout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addComponent(P1)
                        .addGap(18, 18, 18)
                        .addComponent(R1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, E2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(P2, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(R2, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(324, 324, 324)
                .addGroup(E2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(B2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(B1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(B3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(B4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        E2Layout.setVerticalGroup(
            E2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(E2Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(B1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(E2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(P1)
                    .addGroup(E2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(R1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(B2)))
                .addGroup(E2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(E2Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(B3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(B4))
                    .addGroup(E2Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(E2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(R2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(P2))))
                .addGroup(E2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(E2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, E2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(B5, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(125, 125, 125))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(E1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(E2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(E1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(E2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

      public void ListarCategoria()
    {
        
         try {
             Connection conexion = DatabaseConnection.getConnection();
              CategoriaDAO modelo = new CategoriaDAO(conexion);
               
             CategoriaController controller = new CategoriaController(modelo);
             conexion = DatabaseConnection.getConnection();
             List<Categoria> listaUsuario = controller.listar();
             
             DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
             model.setRowCount(0); // Limpiar la tabla antes de a√±adir nuevos datos

        for (Categoria categoria : listaUsuario) {
          Object[] row = {categoria.getId(), categoria.getNombre()};
          model.addRow(row);
        }
             
         } catch (ClassNotFoundException ex) {
             Logger.getLogger(LibroView.class.getName()).log(Level.SEVERE, null, ex);
         }
    } 
      
    public void LimpiarCampos()
    {
    
       R1.setText("");
       R2.setText("");
     
    }
  
    private void B4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B4ActionPerformed
         //Eliminar
        //llenar variasbles con los campos del formulario
        int id = Integer.parseInt(R1.getText());
        //control para las excepciones
         try {
             
             //abrir conexion
              Connection conexion = DatabaseConnection.getConnection();
              
              //instanciar DAO
              CategoriaDAO modelo = new CategoriaDAO(conexion);
               
              //Instanciar controller
             CategoriaController controller = new CategoriaController(modelo);
             
             //traigo metodo
             controller.eliminar(id);
             ListarCategoria();
             LimpiarCampos();
             B1.setEnabled(true);
             
         } catch (ClassNotFoundException ex) {
             Logger.getLogger(LibroView.class.getName()).log(Level.SEVERE, null, ex);
         }
    }//GEN-LAST:event_B4ActionPerformed

    private void B5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B5ActionPerformed
        //Volver
        dispose(); 
        LibroView u = new LibroView ();
        u.setVisible(true);
        
    }//GEN-LAST:event_B5ActionPerformed

    private void B1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B1ActionPerformed
       
        //Crear
          
       //llenar variasbles con los campos del formulario
        String nombre = R2.getText();
   
     //control y captura para las excepciones
         try {
              Connection conexion = DatabaseConnection.getConnection();
              //instanciando el DAO
              CategoriaDAO modelo = new CategoriaDAO(conexion);
               
              //instanciando el controller
             CategoriaController controller = new CategoriaController(modelo);
             
             //llamando el metodo -- Crear
             controller.crear(nombre);
             
             //llamando el metodo listar categoria para la visualizacion dentro de la tabla
             ListarCategoria();
             
             //llamando el metodo para limpiar los campos
             LimpiarCampos();
             
         } catch (ClassNotFoundException ex) {
             Logger.getLogger(LibroView.class.getName()).log(Level.SEVERE, null, ex);
         }
    
        
    }//GEN-LAST:event_B1ActionPerformed

    private void B2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B2ActionPerformed
     
     //boton seleccionar   
     int filaSeleccionada = jTable1.getSelectedRow();
     DefaultTableModel model = (DefaultTableModel) jTable1.getModel();

    // Obtener datos de la fila seleccionada
    Object id = model.getValueAt(filaSeleccionada, 0);  // Suponiendo que la columna 0 es el ID
    Object nombre = model.getValueAt(filaSeleccionada, 1);  // Suponiendo que la columna 1 es el t√≠tulo
    
    // Mostrar los datos en los campos de edici√≥n
    R1.setText(id.toString());  // R1 es un JTextField donde se muestra el ID
    R2.setText(nombre.toString());  // R2 es un JTextField donde se muestra el t√≠tulo
   
    B1.setEnabled(false);
    
    }//GEN-LAST:event_B2ActionPerformed

    private void B3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B3ActionPerformed
     
     //actualizar
     
     //llenar las varibles con los datos ingresados en el formulario
     int id = Integer.parseInt(R1.getText());
     String nombre = R2.getText();
   
    
         try {
              Connection conexion = DatabaseConnection.getConnection();
              CategoriaDAO modelo = new CategoriaDAO(conexion);
               
             CategoriaController controller = new CategoriaController(modelo);
             controller.Actualizar(id,nombre);
             ListarCategoria();
             LimpiarCampos();
             B1.setEnabled(true);
             
         } catch (ClassNotFoundException ex) {
             Logger.getLogger(LibroView.class.getName()).log(Level.SEVERE, null, ex);
         }
    }//GEN-LAST:event_B3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CategoriaView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CategoriaView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CategoriaView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CategoriaView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CategoriaView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton B1;
    private javax.swing.JButton B2;
    private javax.swing.JButton B3;
    private javax.swing.JButton B4;
    public javax.swing.JButton B5;
    public javax.swing.JPanel E1;
    public javax.swing.JPanel E2;
    private javax.swing.JLabel P1;
    private javax.swing.JLabel P2;
    private javax.swing.JTextField R1;
    public javax.swing.JTextField R2;
    private javax.swing.JLabel TITULO;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
