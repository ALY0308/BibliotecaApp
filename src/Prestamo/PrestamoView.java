/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Prestamo;

import Libro.Libro;
import Libro.LibroController;
import Libro.LibroDAO;
import Libro.LibroView;
import Usuario.UsuarioController;
import Usuario.UsuarioDAO;
import bibliotecaapp.DatabaseConnection;
import java.sql.Connection;
import java.sql.Date;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.table.DefaultTableModel;



/**
 *
 * @author ALY
 */
public class PrestamoView extends javax.swing.JFrame {

    private JComboBox<Libro> comboBoxLibros;
    /**
     * Creates new form PrestamoView
     */
    public PrestamoView() {
        initComponents();
        ListarLibros();
        ListarUsuarios();
        ListarPrestamo();
        R2.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        E1 = new javax.swing.JPanel();
        TITULO = new javax.swing.JLabel();
        E2 = new javax.swing.JPanel();
        P1 = new javax.swing.JLabel();
        P2 = new javax.swing.JLabel();
        P3 = new javax.swing.JLabel();
        P4 = new javax.swing.JLabel();
        P5 = new javax.swing.JLabel();
        R2 = new javax.swing.JTextField();
        B1 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        B5 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        jComboBox2 = new javax.swing.JComboBox<>();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        E1.setBackground(new java.awt.Color(153, 153, 255));

        TITULO.setBackground(new java.awt.Color(153, 153, 255));
        TITULO.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        TITULO.setForeground(new java.awt.Color(0, 0, 0));
        TITULO.setText("Prestamo");

        javax.swing.GroupLayout E1Layout = new javax.swing.GroupLayout(E1);
        E1.setLayout(E1Layout);
        E1Layout.setHorizontalGroup(
            E1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(E1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(TITULO, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        E1Layout.setVerticalGroup(
            E1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(E1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(TITULO, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        E2.setBackground(new java.awt.Color(204, 204, 255));
        E2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Datos De Prestamo", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 14), new java.awt.Color(0, 0, 0))); // NOI18N
        E2.setForeground(new java.awt.Color(0, 0, 0));

        P1.setBackground(new java.awt.Color(204, 204, 255));
        P1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        P1.setForeground(new java.awt.Color(0, 0, 0));
        P1.setText("Id:");

        P2.setBackground(new java.awt.Color(204, 204, 255));
        P2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        P2.setForeground(new java.awt.Color(0, 0, 0));
        P2.setText("Id De Libro:");

        P3.setBackground(new java.awt.Color(204, 204, 255));
        P3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        P3.setForeground(new java.awt.Color(0, 0, 0));
        P3.setText("Id De Usuario:");

        P4.setBackground(new java.awt.Color(204, 204, 255));
        P4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        P4.setForeground(new java.awt.Color(0, 0, 0));
        P4.setText("Fecha De Prestamo:");

        P5.setBackground(new java.awt.Color(204, 204, 255));
        P5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        P5.setForeground(new java.awt.Color(0, 0, 0));
        P5.setText("Fecha De Devolucion:");

        R2.setBackground(new java.awt.Color(204, 204, 255));
        R2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        R2.setForeground(new java.awt.Color(0, 0, 0));
        R2.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(153, 153, 255)));
        R2.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        R2.setDragEnabled(true);

        B1.setBackground(new java.awt.Color(153, 153, 255));
        B1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        B1.setForeground(new java.awt.Color(0, 0, 0));
        B1.setText("Crear");
        B1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B1ActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(153, 153, 255));
        jButton1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(0, 0, 0));
        jButton1.setText("Seleccionar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(153, 153, 255));
        jButton2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButton2.setForeground(new java.awt.Color(0, 0, 0));
        jButton2.setText("Actualizar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(153, 153, 255));
        jButton3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButton3.setForeground(new java.awt.Color(0, 0, 0));
        jButton3.setText("Eliminar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jTable1.setBackground(new java.awt.Color(153, 153, 255));
        jTable1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jTable1.setForeground(new java.awt.Color(0, 0, 0));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Id", "Id De Usuario", "Id De Libro", "Fecha De Prestamo", "Fecha De Devolucion"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        B5.setBackground(new java.awt.Color(153, 153, 255));
        B5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        B5.setForeground(new java.awt.Color(0, 0, 0));
        B5.setText("Volver");
        B5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B5ActionPerformed(evt);
            }
        });

        jComboBox1.setBackground(new java.awt.Color(204, 204, 255));
        jComboBox1.setForeground(new java.awt.Color(0, 0, 0));
        jComboBox1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 255)));

        jComboBox2.setBackground(new java.awt.Color(204, 204, 255));
        jComboBox2.setForeground(new java.awt.Color(0, 0, 0));
        jComboBox2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 255)));

        jDateChooser1.setBackground(new java.awt.Color(204, 204, 255));
        jDateChooser1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 255)));
        jDateChooser1.setForeground(new java.awt.Color(0, 0, 0));

        jDateChooser2.setBackground(new java.awt.Color(204, 204, 255));
        jDateChooser2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 255)));
        jDateChooser2.setForeground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout E2Layout = new javax.swing.GroupLayout(E2);
        E2.setLayout(E2Layout);
        E2Layout.setHorizontalGroup(
            E2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(E2Layout.createSequentialGroup()
                .addGroup(E2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(E2Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(E2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(P1)
                            .addComponent(P2)
                            .addComponent(P3)
                            .addGroup(E2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(P5)
                                .addComponent(P4, javax.swing.GroupLayout.Alignment.TRAILING)))
                        .addGap(18, 18, 18)
                        .addGroup(E2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(R2, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBox2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jDateChooser1, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE)
                            .addComponent(jDateChooser2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(156, 156, 156)
                        .addGroup(E2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(B1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(E2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 607, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addComponent(B5, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(39, Short.MAX_VALUE))
        );
        E2Layout.setVerticalGroup(
            E2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(E2Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(E2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(E2Layout.createSequentialGroup()
                        .addComponent(B1)
                        .addGap(22, 22, 22)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(E2Layout.createSequentialGroup()
                        .addGroup(E2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(R2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(P1))
                        .addGap(18, 18, 18)
                        .addGroup(E2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(P3)
                            .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(E2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(P2)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(E2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(P4)
                            .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(E2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(P5)
                            .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(E2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(E2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(161, 161, 161))
                    .addGroup(E2Layout.createSequentialGroup()
                        .addGap(89, 89, 89)
                        .addComponent(B5, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(E1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(E2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(E1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(E2, javax.swing.GroupLayout.PREFERRED_SIZE, 543, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    public void ListarPrestamo()
    {
        
         try {
             Connection conexion = DatabaseConnection.getConnection();
              PrestamoDAO modeloP = new PrestamoDAO(conexion);
               
             PrestamoController controller = new PrestamoController(modeloP);
             conexion = DatabaseConnection.getConnection();
             List<Prestamo> listaPrestamo = controller.listar();
             
             DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
             model.setRowCount(0); // Limpiar la tabla antes de añadir nuevos datos

        for (Prestamo prestamo : listaPrestamo) {
          Object[] row = {prestamo.getId(), prestamo.getNombre(),prestamo.getTitulo(), prestamo.getFecha_prestamo(), prestamo.getFecha_devolucion()};
          model.addRow(row);
        }
             
         } catch (ClassNotFoundException ex) {
             Logger.getLogger(LibroView.class.getName()).log(Level.SEVERE, null, ex);
         }
    } 
    
      public void ListarLibros()
    {
    
       try {
           Connection conexion = DatabaseConnection.getConnection();
            PrestamoDAO modeloLibro = new PrestamoDAO(conexion);
             PrestamoController controller = new PrestamoController(modeloLibro);
             List<String> libros = controller.obtenerTodosLosLibros();
       
            DefaultComboBoxModel<String> model = (DefaultComboBoxModel<String>) jComboBox1.getModel();
            model.removeAllElements();
        
        // Verificar si se obtuvieron los libros correctamente
        if (libros != null) {
            for (String nombreLibro : libros) {
                model.addElement(nombreLibro);
            }
        } else {
            model.addElement("Error al obtener libros");
        }
        
             
         } catch (ClassNotFoundException ex) {
             Logger.getLogger(LibroView.class.getName()).log(Level.SEVERE, null, ex);
         }    
    }
    
    
     public void ListarUsuarios()
     {
    
       try {
           Connection conexion = DatabaseConnection.getConnection();
            PrestamoDAO modeloUsuario = new PrestamoDAO(conexion);
             PrestamoController controller = new PrestamoController(modeloUsuario);
             List<String> usuarios = controller.obtenerUsuarios();
       
            DefaultComboBoxModel<String> model = (DefaultComboBoxModel<String>) jComboBox2.getModel();
            model.removeAllElements();
        
        // Verificar si se obtuvieron los libros correctamente
        if (usuarios != null) {
            for (String nombreUsuario : usuarios) {
                model.addElement(nombreUsuario);
            }
        } else {
            model.addElement("Error al obtener usuarios");
        }
        
             
         } catch (ClassNotFoundException ex) {
             Logger.getLogger(LibroView.class.getName()).log(Level.SEVERE, null, ex);
         }    
    }
    
    public void LimpiarCampos()
    {
    
        R2.setText("");
       // Limpiar los JDateChooser
        jDateChooser1.setDate(null);
        jDateChooser2.setDate(null);
      
    }
     
    private void B1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B1ActionPerformed
       
        //se incluye libreria Jcalendar para el campo fecha prestamo y fecha devolucion 
         try {                                   
             
             String libroSeleccionado = (String) jComboBox1.getSelectedItem();
             String UsuarioSeleccionado = (String) jComboBox2.getSelectedItem();
             java.util.Date fechaPrestamo1 = jDateChooser1.getDate();
             java.util.Date fecha_devolucion1 = jDateChooser2.getDate();
             
             SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
             String fechaPrestamoStr = dateFormat.format(fechaPrestamo1);
             String fechaDevolucionStr = dateFormat.format(fecha_devolucion1);
             
             java.util.Date fechaPrestamoUtil = dateFormat.parse(fechaPrestamoStr);
             java.util.Date fechaDevolucionUtil = dateFormat.parse(fechaDevolucionStr);
             
             java.sql.Date fechaPrestamo = new java.sql.Date(fechaPrestamoUtil.getTime());
             java.sql.Date fechaDevolucion = new java.sql.Date(fechaDevolucionUtil.getTime());
             
             try {
                 Connection conexion = DatabaseConnection.getConnection();
                 LibroDAO modeloLibro = new LibroDAO(conexion);
                 PrestamoDAO modeloP = new PrestamoDAO(conexion);
                 
                 String titulo = libroSeleccionado;
                 String nombre = UsuarioSeleccionado;
                 
                 
                 LibroController controller = new LibroController(modeloLibro);
                 
                 
                 UsuarioDAO modelousuario = new UsuarioDAO(conexion);
                 UsuarioController controllerusuario = new UsuarioController(modelousuario);
                 
                 int id_libro = controller.obtenerIdLibro(titulo);
                 
                 int id_usuario = controllerusuario.obtenerIdusuario(nombre);
                 
                 PrestamoController Pcontroller = new PrestamoController(modeloP);
                 Pcontroller.crear(id_libro, id_usuario, fechaPrestamo, fechaDevolucion);
                 ListarPrestamo();
                 LimpiarCampos();
                 
             } catch (ClassNotFoundException ex) {
                 Logger.getLogger(LibroView.class.getName()).log(Level.SEVERE, null, ex);
             }
             
             
             
         } catch (ParseException ex) {
             Logger.getLogger(PrestamoView.class.getName()).log(Level.SEVERE, null, ex);
         }
    
    }//GEN-LAST:event_B1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
      
     
        try {
            int filaSeleccionada = jTable1.getSelectedRow();
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            
            // Obtener datos de la fila seleccionada
            Object id = model.getValueAt(filaSeleccionada, 0);  // Suponiendo que la columna 0 es el ID
            Object titulo = model.getValueAt(filaSeleccionada, 1);  // Suponiendo que la columna 1 es el título
            Object nombre = model.getValueAt(filaSeleccionada, 2);  // Suponiendo que la columna 2 es el autor
            Object fechaprestamo = model.getValueAt(filaSeleccionada, 3);  // Suponiendo que la columna 3 es la editorial
            Object fechadevolucion = model.getValueAt(filaSeleccionada, 4);  // Suponiendo que la columna 4 es el año de publicación
            
            // Mostrar los datos en los campos de edición
            R2.setText(id.toString());  // R1 es un JTextField donde se muestra el ID
            jComboBox2.setSelectedItem(nombre.toString());
            jComboBox1.setSelectedItem(titulo.toString()); // R3 es un JTextField donde se muestra el autor
            
            java.util.Date fechaPrestamoDate = new SimpleDateFormat("yyyy-MM-dd").parse(fechaprestamo.toString());
            jDateChooser1.setDate(fechaPrestamoDate);
            
            java.util.Date fechaDevolucionDate = new SimpleDateFormat("yyyy-MM-dd").parse(fechadevolucion.toString());
            jDateChooser2.setDate(fechaDevolucionDate);
            
            B1.setEnabled(false);
        } catch (ParseException ex) {
            Logger.getLogger(PrestamoView.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
           try {                                   
             
             int id = Integer.parseInt(R2.getText());
             String libroSeleccionado = (String) jComboBox1.getSelectedItem();
             String UsuarioSeleccionado = (String) jComboBox2.getSelectedItem();
             java.util.Date fechaPrestamo1 = jDateChooser1.getDate();
             java.util.Date fecha_devolucion1 = jDateChooser2.getDate();
             
             SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
             String fechaPrestamoStr = dateFormat.format(fechaPrestamo1);
             String fechaDevolucionStr = dateFormat.format(fecha_devolucion1);
             
             java.util.Date fechaPrestamoUtil = dateFormat.parse(fechaPrestamoStr);
             java.util.Date fechaDevolucionUtil = dateFormat.parse(fechaDevolucionStr);
             
             java.sql.Date fechaPrestamo = new java.sql.Date(fechaPrestamoUtil.getTime());
             java.sql.Date fechaDevolucion = new java.sql.Date(fechaDevolucionUtil.getTime());
             
             try {
                 Connection conexion = DatabaseConnection.getConnection();
                 LibroDAO modeloLibro = new LibroDAO(conexion);
                 PrestamoDAO modeloP = new PrestamoDAO(conexion);
                 
                 String titulo = libroSeleccionado;
                 String nombre = UsuarioSeleccionado;
                 
                 
                 LibroController controller = new LibroController(modeloLibro);
                 
                 
                 UsuarioDAO modelousuario = new UsuarioDAO(conexion);
                 UsuarioController controllerusuario = new UsuarioController(modelousuario);
                 
                 int id_libro = controller.obtenerIdLibro(titulo);
                 
                 int id_usuario = controllerusuario.obtenerIdusuario(nombre);
                 
                 PrestamoController Pcontroller = new PrestamoController(modeloP);
                 Pcontroller.Actualizar(id,id_libro, id_usuario, fechaPrestamo, fechaDevolucion);
                 ListarPrestamo();
                 LimpiarCampos();
                 B1.setEnabled(true);
                 
             } catch (ClassNotFoundException ex) {
                 Logger.getLogger(LibroView.class.getName()).log(Level.SEVERE, null, ex);
             }
             
             
             
         } catch (ParseException ex) {
             Logger.getLogger(PrestamoView.class.getName()).log(Level.SEVERE, null, ex);
         }
    
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
       
             int id = Integer.parseInt(R2.getText());
           
             
             try {
                 Connection conexion = DatabaseConnection.getConnection();
                 LibroDAO modeloLibro = new LibroDAO(conexion);
                 PrestamoDAO modeloP = new PrestamoDAO(conexion);
               
                 PrestamoController Pcontroller = new PrestamoController(modeloP);
                 Pcontroller.eliminar(id);
                 ListarPrestamo();
                 LimpiarCampos();
                 
             } catch (ClassNotFoundException ex) {
                 Logger.getLogger(LibroView.class.getName()).log(Level.SEVERE, null, ex);
             }
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void B5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B5ActionPerformed
        
        dispose(); 
        LibroView u = new LibroView ();
        u.setVisible(true);
    }//GEN-LAST:event_B5ActionPerformed

  
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PrestamoView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PrestamoView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PrestamoView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PrestamoView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PrestamoView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton B1;
    public javax.swing.JButton B5;
    public javax.swing.JPanel E1;
    public javax.swing.JPanel E2;
    public javax.swing.JLabel P1;
    public javax.swing.JLabel P2;
    public javax.swing.JLabel P3;
    public javax.swing.JLabel P4;
    public javax.swing.JLabel P5;
    public javax.swing.JTextField R2;
    public javax.swing.JLabel TITULO;
    public javax.swing.JButton jButton1;
    public javax.swing.JButton jButton2;
    public javax.swing.JButton jButton3;
    public javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    public com.toedter.calendar.JDateChooser jDateChooser1;
    public com.toedter.calendar.JDateChooser jDateChooser2;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
